---
object_type: class
version: 1.0
object:
  attributes:
    description: Factory State Machines
    display_name: 
    name: VMProvision_VM
    type: 
    inherits: 
    visibility: 
    owner: 
  schema:
  - field:
      aetype: state
      name: CustomizeRequest
      display_name: 
      datatype: string
      priority: 1
      owner: 
      default_value: "/Infrastructure/VM/Provisioning/StateMachines/Methods/CustomizeRequest#${/#miq_provision.source.vendor}"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Customizing Request')
      on_exit: update_provision_status(status => 'Customized Request')
      on_error: update_provision_status(status => 'Error Customizing Request')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: RegisterNewHostname
      display_name: 
      datatype: string
      priority: 2
      owner: 
      default_value: "/Integration/IPAM/BlueCat/register_new_hostname_with_random_mac"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Acquiring IP Address')
      on_exit: update_provision_status(status => 'Acquired IP Address')
      on_error: update_provision_status(status => 'Error Acquiring IP Address')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: AcquireMACAddress
      display_name: 
      datatype: string
      priority: 3
      owner: 
      default_value: 
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Acquiring MAC Address')
      on_exit: update_provision_status(status => 'Acquired MAC Address')
      on_error: update_provision_status(status => 'Error Acquiring MAC Address')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: RegisterCMDB
      display_name: 
      datatype: string
      priority: 4
      owner: 
      default_value: 
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Registering CMDB')
      on_exit: update_provision_status(status => 'Registered CMDB')
      on_error: update_provision_status(status => 'Error Registering CMDB')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: RegisterAD
      display_name: 
      datatype: string
      priority: 5
      owner: 
      default_value: 
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Registering ActiveDirectory')
      on_exit: update_provision_status(status => 'Registered ActiveDirectory')
      on_error: update_provision_status(status => 'Error Registering ActiveDirectory')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: Placement
      display_name: 
      datatype: string
      priority: 6
      owner: 
      default_value: "/Infrastructure/VM/Provisioning/Placement/default#${/#miq_provision.source.vendor}"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Starting Placement')
      on_exit: update_provision_status(status => 'Finished Placement')
      on_error: update_provision_status(status => 'Error in Placement')
      max_retries: 
      max_time: 
  - field:
      aetype: state
      name: PreProvision
      display_name: 
      datatype: string
      priority: 7
      owner: 
      default_value: "/Infrastructure/VM/Provisioning/StateMachines/Methods/PreProvision#${/#miq_provision.source.vendor}"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Applying PreProvision Customizations')
      on_exit: update_provision_status(status => 'Applied PreProvision Customizations')
      on_error: update_provision_status(status => 'Error Applying PreProvision Customizations')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: Provision
      display_name: 
      datatype: string
      priority: 8
      owner: 
      default_value: "/Infrastructure/VM/Provisioning/StateMachines/Methods/Provision"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Creating VM')
      on_exit: update_provision_status(status => 'Creating VM')
      on_error: update_provision_status(status => 'Error Creating VM')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: CheckProvisioned
      display_name: 
      datatype: string
      priority: 9
      owner: 
      default_value: "/Infrastructure/VM/Provisioning/StateMachines/Methods/CheckProvisioned"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'VM creation initiated')
      on_exit: update_provision_status(status => 'Creating VM')
      on_error: update_provision_status(status => 'Error Creating VM')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: UpdateHostWithDHCPAddress
      display_name: 
      datatype: string
      priority: 10
      owner: 
      default_value: "/Integration/IPAM/BlueCat/update_host_with_dhcp_address "
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'BlueCat IPAM registration initiated')
      on_exit: update_provision_status(status => 'BlueCat IPAM registration running')
      on_error: update_provision_status(status => 'BlueCat IPAM registraton ended
        with error')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: CheckDNSName
      display_name: 
      datatype: string
      priority: 11
      owner: 
      default_value: "/Integration/IPAM/BlueCat/check_dns_name_available"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'DNS check host visibility initiated')
      on_exit: update_provision_status(status => 'DNS check host visibility running')
      on_error: update_provision_status(status => 'DNS check host visibility ended
        with error')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: RegisterToSatellite
      display_name: 
      datatype: string
      priority: 12
      owner: 
      default_value: "/Integration/Satellite/Provisioning/register_satellite"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Satellite host registration initiated')
      on_exit: update_provision_status(status => 'Satellite host registration running')
      on_error: update_provision_status(status => 'Satellite host registration ended
        with error')
      max_retries: 
      max_time: 
  - field:
      aetype: state
      name: RunAnsiblePlaybook
      display_name: 
      datatype: string
      priority: 13
      owner: 
      default_value: "/Integration/AnsibleTower/StateMachines/cloudforms_testnetz_check_provisioned"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Initial config via Ansible Tower
        initiated')
      on_exit: update_provision_status(status => 'Initial config via Ansible Tower
        running')
      on_error: update_provision_status(status => 'Initial config via Ansible Tower
        ended with error')
      max_retries: 
      max_time: 
  - field:
      aetype: state
      name: PostProvision
      display_name: 
      datatype: string
      priority: 14
      owner: 
      default_value: "/Infrastructure/VM/Provisioning/StateMachines/Methods/PostProvision#${/#miq_provision.source.vendor}"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Applying PostProvision Customizations')
      on_exit: update_provision_status(status => 'Applied PostProvision Customizations')
      on_error: update_provision_status(status => 'Error Applying PostProvision Customizations')
      max_retries: 
      max_time: 
  - field:
      aetype: state
      name: alh_postprovision
      display_name: Apply specific provisioning Tasks
      datatype: string
      priority: 15
      owner: 
      default_value: "#/Infrastructure/VM/Provisioning/StateMachines/Methods/alh_postprovision"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Started specific post-provision
        tasks')
      on_exit: update_provision_status(status => 'Running specific post-provision
        tasks')
      on_error: update_provision_status(status => 'Error specific post-provision
        tasks')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: EmailOwner
      display_name: 
      datatype: string
      priority: 16
      owner: 
      default_value: "/Infrastructure/VM/Provisioning/Email/MiqProvision_Complete?event=vm_provisioned"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_provision_status(status => 'Emailing Owner')
      on_exit: update_provision_status(status => 'Emailed Owner')
      on_error: update_provision_status(status => 'Error Emailing Owner')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: Finished
      display_name: 
      datatype: string
      priority: 17
      owner: 
      default_value: "/System/CommonMethods/StateMachineMethods/vm_provision_finished"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: 
      on_exit: 
      on_error: 
      max_retries: '100'
      max_time: 
